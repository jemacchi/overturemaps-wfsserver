version: '3.8'

services:
  db:
    image: postgis/postgis:latest
    container_name: db
    hostname: db
    environment:
      POSTGRES_DB: overturemaps_wfsserver_db
      POSTGRES_USER: ovrwfsserver_user
      POSTGRES_PASSWORD: overturemaps
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data

  geoserver:
    image: docker.osgeo.org/geoserver:2.25.2
    hostname: geoserver
    container_name: geoserver
    environment:
      - CORS_ENABLED=true
      - CORS_ALLOWED_ORIGINS=*
    ports:
      - "8080:8080"
    volumes:
      - ./geoserver/datadir:/opt/geoserver_data
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 2048M

  overturemapsserver:
    build:
      context: ./overturemaps_wfsserver
      dockerfile: Dockerfile
    hostname: overturemapsserver
    container_name: overturemapsserver
    restart: always
    command: >
      sh -c "dockerize -wait tcp://db:5432 -timeout 60s &&
             python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./overturemaps_wfsserver:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      - DEBUG=True
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 1024M

  nginx:
    image: nginx:latest
    container_name: nginx
    hostname: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx:/usr/share/nginx/html

volumes:
  pg_data:
